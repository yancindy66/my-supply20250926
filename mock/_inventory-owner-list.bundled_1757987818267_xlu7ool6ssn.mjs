// mock/inventory-owner-list.js
var agencies = [
  { id: 1, name: "\u56FD\u5BB6\u76D1\u7BA1\u5C40", contact: "\u738B\u4E94", phone: "13600000000", region: "\u5168\u56FD", code: "JG-001" },
  { id: 2, name: "\u4E0A\u6D77\u76D1\u7BA1\u5C40", contact: "\u8D75\u516D", phone: "13700000001", region: "\u4E0A\u6D77", code: "JG-002" }
];
var inventory_owner_list_default = [
  {
    url: "/api/regulatory-agency/list",
    method: "get",
    response: ({ query }) => {
      const page = parseInt(query?.page || "1", 10) || 1;
      const pageSize = parseInt(query?.pageSize || "10", 10) || 10;
      const total = agencies.length;
      const start = (page - 1) * pageSize;
      const list = agencies.slice(start, start + pageSize);
      return { code: 0, data: { list, total, page, pageSize } };
    }
  },
  {
    url: "/api/regulatory-agency/create",
    method: "post",
    response: ({ body }) => {
      const id = Math.max(0, ...agencies.map((o) => o.id)) + 1;
      const item = { id, ...body };
      agencies.push(item);
      return { code: 0, data: item };
    }
  },
  {
    url: "/api/regulatory-agency/update",
    method: "post",
    response: ({ body }) => {
      const idx = agencies.findIndex((o) => o.id == body.id);
      if (idx === -1) return { code: 1, msg: "\u672A\u627E\u5230" };
      agencies[idx] = { ...agencies[idx], ...body };
      return { code: 0, data: agencies[idx] };
    }
  }
];
export {
  inventory_owner_list_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay9pbnZlbnRvcnktb3duZXItbGlzdC5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX19pbmplY3RlZF9maWxlbmFtZV9fID0gXCJFOlxcXFxteS1zdXBwbHlcXFxcbXlcXFxcbW9ja1xcXFxpbnZlbnRvcnktb3duZXItbGlzdC5qc1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCJFOlxcXFxteS1zdXBwbHlcXFxcbXlcXFxcbW9ja1wiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vRTovbXktc3VwcGx5L215L21vY2svaW52ZW50b3J5LW93bmVyLWxpc3QuanNcIjtsZXQgYWdlbmNpZXMgPSBbXHJcbiAgeyBpZDogMSwgbmFtZTogJ1x1NTZGRFx1NUJCNlx1NzZEMVx1N0JBMVx1NUM0MCcsIGNvbnRhY3Q6ICdcdTczOEJcdTRFOTQnLCBwaG9uZTogJzEzNjAwMDAwMDAwJywgcmVnaW9uOiAnXHU1MTY4XHU1NkZEJywgY29kZTogJ0pHLTAwMScgfSxcclxuICB7IGlkOiAyLCBuYW1lOiAnXHU0RTBBXHU2RDc3XHU3NkQxXHU3QkExXHU1QzQwJywgY29udGFjdDogJ1x1OEQ3NVx1NTE2RCcsIHBob25lOiAnMTM3MDAwMDAwMDEnLCByZWdpb246ICdcdTRFMEFcdTZENzcnLCBjb2RlOiAnSkctMDAyJyB9XHJcbl07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBbXHJcbiAge1xyXG4gICAgdXJsOiAnL2FwaS9yZWd1bGF0b3J5LWFnZW5jeS9saXN0JyxcclxuICAgIG1ldGhvZDogJ2dldCcsXHJcbiAgICByZXNwb25zZTogKHsgcXVlcnkgfSkgPT4ge1xyXG4gICAgICBjb25zdCBwYWdlID0gcGFyc2VJbnQocXVlcnk/LnBhZ2UgfHwgJzEnLCAxMCkgfHwgMTtcclxuICAgICAgY29uc3QgcGFnZVNpemUgPSBwYXJzZUludChxdWVyeT8ucGFnZVNpemUgfHwgJzEwJywgMTApIHx8IDEwO1xyXG4gICAgICBjb25zdCB0b3RhbCA9IGFnZW5jaWVzLmxlbmd0aDtcclxuICAgICAgY29uc3Qgc3RhcnQgPSAocGFnZSAtIDEpICogcGFnZVNpemU7XHJcbiAgICAgIGNvbnN0IGxpc3QgPSBhZ2VuY2llcy5zbGljZShzdGFydCwgc3RhcnQgKyBwYWdlU2l6ZSk7XHJcbiAgICAgIHJldHVybiB7IGNvZGU6IDAsIGRhdGE6IHsgbGlzdCwgdG90YWwsIHBhZ2UsIHBhZ2VTaXplIH0gfTtcclxuICAgIH1cclxuICB9LFxyXG4gIHtcclxuICAgIHVybDogJy9hcGkvcmVndWxhdG9yeS1hZ2VuY3kvY3JlYXRlJyxcclxuICAgIG1ldGhvZDogJ3Bvc3QnLFxyXG4gICAgcmVzcG9uc2U6ICh7IGJvZHkgfSkgPT4ge1xyXG4gICAgICBjb25zdCBpZCA9IE1hdGgubWF4KDAsIC4uLmFnZW5jaWVzLm1hcChvID0+IG8uaWQpKSArIDE7XHJcbiAgICAgIGNvbnN0IGl0ZW0gPSB7IGlkLCAuLi5ib2R5IH07XHJcbiAgICAgIGFnZW5jaWVzLnB1c2goaXRlbSk7XHJcbiAgICAgIHJldHVybiB7IGNvZGU6IDAsIGRhdGE6IGl0ZW0gfTtcclxuICAgIH1cclxuICB9LFxyXG4gIHtcclxuICAgIHVybDogJy9hcGkvcmVndWxhdG9yeS1hZ2VuY3kvdXBkYXRlJyxcclxuICAgIG1ldGhvZDogJ3Bvc3QnLFxyXG4gICAgcmVzcG9uc2U6ICh7IGJvZHkgfSkgPT4ge1xyXG4gICAgICBjb25zdCBpZHggPSBhZ2VuY2llcy5maW5kSW5kZXgobyA9PiBvLmlkID09IGJvZHkuaWQpO1xyXG4gICAgICBpZiAoaWR4ID09PSAtMSkgcmV0dXJuIHsgY29kZTogMSwgbXNnOiAnXHU2NzJBXHU2MjdFXHU1MjMwJyB9O1xyXG4gICAgICBhZ2VuY2llc1tpZHhdID0geyAuLi5hZ2VuY2llc1tpZHhdLCAuLi5ib2R5IH07XHJcbiAgICAgIHJldHVybiB7IGNvZGU6IDAsIGRhdGE6IGFnZW5jaWVzW2lkeF0gfTtcclxuICAgIH1cclxuICB9XHJcbl07XHJcblxyXG5cclxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFvTyxJQUFJLFdBQVc7QUFBQSxFQUNqUCxFQUFFLElBQUksR0FBRyxNQUFNLGtDQUFTLFNBQVMsZ0JBQU0sT0FBTyxlQUFlLFFBQVEsZ0JBQU0sTUFBTSxTQUFTO0FBQUEsRUFDMUYsRUFBRSxJQUFJLEdBQUcsTUFBTSxrQ0FBUyxTQUFTLGdCQUFNLE9BQU8sZUFBZSxRQUFRLGdCQUFNLE1BQU0sU0FBUztBQUM1RjtBQUVBLElBQU8sK0JBQVE7QUFBQSxFQUNiO0FBQUEsSUFDRSxLQUFLO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixVQUFVLENBQUMsRUFBRSxNQUFNLE1BQU07QUFDdkIsWUFBTSxPQUFPLFNBQVMsT0FBTyxRQUFRLEtBQUssRUFBRSxLQUFLO0FBQ2pELFlBQU0sV0FBVyxTQUFTLE9BQU8sWUFBWSxNQUFNLEVBQUUsS0FBSztBQUMxRCxZQUFNLFFBQVEsU0FBUztBQUN2QixZQUFNLFNBQVMsT0FBTyxLQUFLO0FBQzNCLFlBQU0sT0FBTyxTQUFTLE1BQU0sT0FBTyxRQUFRLFFBQVE7QUFDbkQsYUFBTyxFQUFFLE1BQU0sR0FBRyxNQUFNLEVBQUUsTUFBTSxPQUFPLE1BQU0sU0FBUyxFQUFFO0FBQUEsSUFDMUQ7QUFBQSxFQUNGO0FBQUEsRUFDQTtBQUFBLElBQ0UsS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsVUFBVSxDQUFDLEVBQUUsS0FBSyxNQUFNO0FBQ3RCLFlBQU0sS0FBSyxLQUFLLElBQUksR0FBRyxHQUFHLFNBQVMsSUFBSSxPQUFLLEVBQUUsRUFBRSxDQUFDLElBQUk7QUFDckQsWUFBTSxPQUFPLEVBQUUsSUFBSSxHQUFHLEtBQUs7QUFDM0IsZUFBUyxLQUFLLElBQUk7QUFDbEIsYUFBTyxFQUFFLE1BQU0sR0FBRyxNQUFNLEtBQUs7QUFBQSxJQUMvQjtBQUFBLEVBQ0Y7QUFBQSxFQUNBO0FBQUEsSUFDRSxLQUFLO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixVQUFVLENBQUMsRUFBRSxLQUFLLE1BQU07QUFDdEIsWUFBTSxNQUFNLFNBQVMsVUFBVSxPQUFLLEVBQUUsTUFBTSxLQUFLLEVBQUU7QUFDbkQsVUFBSSxRQUFRLEdBQUksUUFBTyxFQUFFLE1BQU0sR0FBRyxLQUFLLHFCQUFNO0FBQzdDLGVBQVMsR0FBRyxJQUFJLEVBQUUsR0FBRyxTQUFTLEdBQUcsR0FBRyxHQUFHLEtBQUs7QUFDNUMsYUFBTyxFQUFFLE1BQU0sR0FBRyxNQUFNLFNBQVMsR0FBRyxFQUFFO0FBQUEsSUFDeEM7QUFBQSxFQUNGO0FBQ0Y7IiwKICAibmFtZXMiOiBbXQp9Cg==
